name: Destroy Infrastructure

on:
  push:
    branches:
      - self-hosted
  workflow_dispatch:

jobs:
  destroy-cluster:
    runs-on: self-hosted

    steps:

    # Destroy Terraform AKS Resources
    - name: Checkout this Github repository
      uses: actions/checkout@v4

    - name: Login to Microsoft Azure CLI
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Initialize and validate Terraform configuration
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      run: terraform init && terraform validate
      working-directory: ./terraform

    # - name: Connect to AKS Cluster
    #   env:
    #     ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
    #     ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
    #     ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    #     ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    #     USER_OBJECT_ID: ${{ secrets.MY_USER_OBJECT_ID }}
    #   run: |
    #     cat <<EOF > terraform.tfvars.json
    #     {
    #       "my_user_object_id": "$USER_OBJECT_ID",
    #       "github_runner_token": "$RUNNER_TOKEN"
    #     }
    #     EOF

    #     terraform output -raw aks_resource_group
    #     terraform output -raw aks_cluster_name

    #     chmod +x bash_scripts/get-aks-cred.sh
    #     ./bash_scripts/get-aks-cred.sh

    #     sudo az aks install-cli

    #     kubelogin convert-kubeconfig -l azurecli
    #   working-directory: ./terraform

    - name: Destory Terraform Resources
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        USER_OBJECT_ID: ${{ secrets.MY_USER_OBJECT_ID }}
      run: |
        cat <<EOF > terraform.tfvars.json
        {
          "my_user_object_id": "$USER_OBJECT_ID",
          "github_runner_token": "$RUNNER_TOKEN"
        }
        EOF

        terraform output -raw aks_resource_group
        terraform output -raw aks_cluster_name

        az login --service-principal --username "${ARM_CLIENT_ID}" --password "${ARM_CLIENT_SECRET}" --tenant "${ARM_TENANT_ID}"

        chmod +x bash_scripts/get-aks-cred.sh
        ./bash_scripts/get-aks-cred.sh

        export KUBECONFIG="/home/githubrunner/.kube/config"
        echo "KUBECONFIG set to $KUBECONFIG"

        sudo az aks install-cli

        kubelogin convert-kubeconfig -l spn --client-id "${ARM_CLIENT_ID}" --client-secret "${ARM_CLIENT_SECRET}" --tenant-id "${ARM_TENANT_ID}"

        echo "Verifying kubectl access"
        kubectl get ns -A
        
        terraform apply --auto-approve
      working-directory: ./terraform
    
  destroy-runner-vm:
    needs: destroy-cluster
    runs-on: ubuntu-latest

    steps:

    # Destroy Remaining Terraform Resources
    - name: Checkout this Github repository
      uses: actions/checkout@v4

    - name: Move /deploy contents to /terraform
      run: |
        mv main.tf prevent_destroy/
        mv allow_destroy/main.tf .
      working-directory: ./terraform

    - name: Login to Microsoft Azure CLI
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Initialize and validate Terraform configuration
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      run: terraform init && terraform validate
      working-directory: ./terraform

    - name: Destory Terraform Resources
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        USER_OBJECT_ID: ${{ secrets.MY_USER_OBJECT_ID }}
      run: |
        cat <<EOF > terraform.tfvars.json
        {
          "my_user_object_id": "$USER_OBJECT_ID",
          "github_runner_token": "$RUNNER_TOKEN"
        }
        EOF
        
        terraform destroy --auto-approve
      working-directory: ./terraform

